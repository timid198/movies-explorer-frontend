[{"C:\\Users\\timid\\dev\\movies-explorer-frontend\\src\\index.js":"1","C:\\Users\\timid\\dev\\movies-explorer-frontend\\src\\reportWebVitals.js":"2","C:\\Users\\timid\\dev\\movies-explorer-frontend\\src\\components\\App\\App.js":"3","C:\\Users\\timid\\dev\\movies-explorer-frontend\\src\\components\\Main\\Main.js":"4","C:\\Users\\timid\\dev\\movies-explorer-frontend\\src\\components\\Movies\\Movies.js":"5","C:\\Users\\timid\\dev\\movies-explorer-frontend\\src\\components\\Popup\\Popup.js":"6","C:\\Users\\timid\\dev\\movies-explorer-frontend\\src\\components\\ErrorPopup\\ErrorPopup.js":"7","C:\\Users\\timid\\dev\\movies-explorer-frontend\\src\\components\\ProtectedRoute\\ProtectedRoute.js":"8","C:\\Users\\timid\\dev\\movies-explorer-frontend\\src\\contexts\\CurrentUserContext.js":"9","C:\\Users\\timid\\dev\\movies-explorer-frontend\\src\\components\\Profile\\Profile.js":"10","C:\\Users\\timid\\dev\\movies-explorer-frontend\\src\\utils\\MoviesApi.js":"11","C:\\Users\\timid\\dev\\movies-explorer-frontend\\src\\utils\\Resize.js":"12","C:\\Users\\timid\\dev\\movies-explorer-frontend\\src\\utils\\constants.js":"13","C:\\Users\\timid\\dev\\movies-explorer-frontend\\src\\components\\Login\\Login.js":"14","C:\\Users\\timid\\dev\\movies-explorer-frontend\\src\\components\\Register\\Register.js":"15","C:\\Users\\timid\\dev\\movies-explorer-frontend\\src\\components\\SavedMovies\\SavedMovies.js":"16","C:\\Users\\timid\\dev\\movies-explorer-frontend\\src\\utils\\MainApi.js":"17","C:\\Users\\timid\\dev\\movies-explorer-frontend\\src\\utils\\FormWithValidation.js":"18","C:\\Users\\timid\\dev\\movies-explorer-frontend\\src\\components\\Header\\Header.js":"19","C:\\Users\\timid\\dev\\movies-explorer-frontend\\src\\components\\NavTab\\NavTab.js":"20","C:\\Users\\timid\\dev\\movies-explorer-frontend\\src\\components\\Promo\\Promo.js":"21","C:\\Users\\timid\\dev\\movies-explorer-frontend\\src\\components\\Techs\\Techs.js":"22","C:\\Users\\timid\\dev\\movies-explorer-frontend\\src\\components\\AboutProject\\AboutProject.js":"23","C:\\Users\\timid\\dev\\movies-explorer-frontend\\src\\components\\AboutMe\\AboutMe.js":"24","C:\\Users\\timid\\dev\\movies-explorer-frontend\\src\\components\\Navigation\\Navigation.js":"25","C:\\Users\\timid\\dev\\movies-explorer-frontend\\src\\components\\Portfolio\\Portfolio.js":"26","C:\\Users\\timid\\dev\\movies-explorer-frontend\\src\\components\\Preloader\\Preloader.js":"27","C:\\Users\\timid\\dev\\movies-explorer-frontend\\src\\components\\SearchForm\\SearchForm.js":"28","C:\\Users\\timid\\dev\\movies-explorer-frontend\\src\\components\\Footer\\Footer.js":"29","C:\\Users\\timid\\dev\\movies-explorer-frontend\\src\\components\\AuthForm\\AuthForm.js":"30","C:\\Users\\timid\\dev\\movies-explorer-frontend\\src\\components\\MoviesCardList\\MoviesCardList.js":"31","C:\\Users\\timid\\dev\\movies-explorer-frontend\\src\\components\\MoviesCard\\MoviesCard.js":"32"},{"size":629,"mtime":1629308484124,"results":"33","hashOfConfig":"34"},{"size":375,"mtime":1629308484125,"results":"35","hashOfConfig":"34"},{"size":9042,"mtime":1630833727130,"results":"36","hashOfConfig":"34"},{"size":990,"mtime":1630792879491,"results":"37","hashOfConfig":"34"},{"size":4854,"mtime":1630792890347,"results":"38","hashOfConfig":"34"},{"size":695,"mtime":1630792847938,"results":"39","hashOfConfig":"34"},{"size":808,"mtime":1630686135114,"results":"40","hashOfConfig":"34"},{"size":366,"mtime":1630833817281,"results":"41","hashOfConfig":"34"},{"size":88,"mtime":1621609969644,"results":"42","hashOfConfig":"34"},{"size":5052,"mtime":1630824170930,"results":"43","hashOfConfig":"34"},{"size":351,"mtime":1630226631821,"results":"44","hashOfConfig":"34"},{"size":463,"mtime":1629640525609,"results":"45","hashOfConfig":"34"},{"size":346,"mtime":1630153829972,"results":"46","hashOfConfig":"34"},{"size":2586,"mtime":1630824181362,"results":"47","hashOfConfig":"34"},{"size":3595,"mtime":1630823834044,"results":"48","hashOfConfig":"34"},{"size":3437,"mtime":1630792928978,"results":"49","hashOfConfig":"34"},{"size":4287,"mtime":1630824132684,"results":"50","hashOfConfig":"34"},{"size":807,"mtime":1629308484127,"results":"51","hashOfConfig":"34"},{"size":1261,"mtime":1630517746015,"results":"52","hashOfConfig":"34"},{"size":491,"mtime":1629308484083,"results":"53","hashOfConfig":"34"},{"size":310,"mtime":1629308484091,"results":"54","hashOfConfig":"34"},{"size":1029,"mtime":1629308484098,"results":"55","hashOfConfig":"34"},{"size":1802,"mtime":1629308484064,"results":"56","hashOfConfig":"34"},{"size":2434,"mtime":1629308484062,"results":"57","hashOfConfig":"34"},{"size":800,"mtime":1630517486760,"results":"58","hashOfConfig":"34"},{"size":1321,"mtime":1629308484087,"results":"59","hashOfConfig":"34"},{"size":320,"mtime":1629308484088,"results":"60","hashOfConfig":"34"},{"size":2665,"mtime":1630604868407,"results":"61","hashOfConfig":"34"},{"size":929,"mtime":1629308484071,"results":"62","hashOfConfig":"34"},{"size":1393,"mtime":1630800480393,"results":"63","hashOfConfig":"34"},{"size":1104,"mtime":1630788065532,"results":"64","hashOfConfig":"34"},{"size":1555,"mtime":1630788056254,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"cpxbhe",{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\timid\\dev\\movies-explorer-frontend\\src\\index.js",[],["135","136"],"C:\\Users\\timid\\dev\\movies-explorer-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\timid\\dev\\movies-explorer-frontend\\src\\components\\App\\App.js",["137","138"],"import React, {useCallback, useEffect, useState} from 'react';\r\nimport '../App/App.css';\r\nimport { Route, Switch, Redirect, useHistory, useLocation } from 'react-router-dom';\r\nimport Main from '../Main/Main';\r\nimport Movies from '../Movies/Movies';\r\nimport SavedMovies from '../SavedMovies/SavedMovies';\r\nimport Profile from '../Profile/Profile';\r\nimport Login from '../Login/Login';\r\nimport Register from '../Register/Register';\r\nimport Popup from '../Popup/Popup';\r\nimport ErrorPopup from '../ErrorPopup/ErrorPopup';\r\nimport ProtectedRoute from '../ProtectedRoute/ProtectedRoute';\r\nimport useWindowDimensions from '../../utils/Resize';\r\nimport * as beatfilmMoviesApi from '../../utils/MoviesApi';\r\nimport * as clientApi from '../../utils/MainApi';\r\nimport {CurrentUserContext} from '../../contexts/CurrentUserContext';\r\n\r\nimport {headerColors} from '../../utils/constants';\r\n\r\nfunction App() {\r\n\r\nconst location = useLocation();\r\nconst { width } = useWindowDimensions()\r\nconst [isBurgerMenuOpen, setIsBurgerMenuOpen] = useState(false);\r\nconst [movies, setMovies] = useState([]);\r\nconst [loggedIn, setLoggedIn] = useState(false);\r\nconst [currentUser, setCurrentUser] = useState({name: CurrentUserContext.name, email: CurrentUserContext.email, _id: CurrentUserContext._id});\r\nconst [savedMovies, setSavedMovies] = useState([]);\r\nconst [loading, setLoading] = useState(false);\r\nconst [openErrorPopup, setOpenErrorPopup] = useState(false);\r\nconst [errorContent, setErrorContent] = useState({satusCode: '', statusMessage: ''});\r\nconst [updateMessage, setUpdateMessage] = useState('');\r\nconst history = useHistory();\r\n\r\nfunction handleBurgerMenuClick() {\r\n  setIsBurgerMenuOpen(true);\r\n}\r\n\r\nfunction handleCloseClick() {\r\n  setIsBurgerMenuOpen(false);\r\n}\r\n\r\nfunction closeOverlay(evt){\r\n  if(evt.target === evt.currentTarget){\r\n    setIsBurgerMenuOpen(false);\r\n  }\r\n}\r\n\r\nuseEffect(() => {\r\n  const handleEsc = (event) => {\r\n      if (event.key === 'Escape') \r\n      setIsBurgerMenuOpen(false);\r\n  };\r\n  window.addEventListener('keydown', handleEsc);\r\n\r\n  return () => {\r\n      window.removeEventListener('keydown', handleEsc);\r\n  };\r\n}, []);\r\n\r\nfunction handleErrorPopup() {\r\n  setOpenErrorPopup(false);\r\n  setErrorContent({satusCode: '', statusMessage: ''});\r\n}\r\n\r\nfunction handleError(el) {\r\n  if (el.status && el.statusText) {\r\n  setOpenErrorPopup(true);\r\n  setErrorContent({satusCode: el.status, statusMessage: el.statusText});\r\n  }\r\n}\r\n\r\nconst getMovies = () => {\r\n  beatfilmMoviesApi.getContentFromBeatFilmMovies()\r\n  .then((res) => {\r\n    setMovies(res)})\r\n  .catch((err) => handleError(err))\r\n  .finally(() => setLoading(false))\r\n}\r\n\r\nconst registerUser = ({name, email, password}) => { \r\n  setLoading(true);\r\n  clientApi.register(name, email, password)\r\n  .then(res => {\r\n    clientApi.login(email, password)\r\n    .then((res) => {setLoggedIn(true);\r\n              history.push('/movies');})\r\n    console.log('Вы успешно зарегистрировались и авторизовались.')})\r\n  .catch((err) => handleError(err))\r\n  .finally(() => setLoading(false))\r\n}\r\n\r\nconst loginUser = ({email, password}) => {\r\n  setLoading(true);\r\n  clientApi.login(email, password)\r\n  .then(res => {setLoggedIn(true);\r\n                history.push('/movies');})\r\n  .catch((err) => console.log(err))\r\n  .finally(() => setLoading(false))\r\n}\r\n\r\nconst logoutUser = () => {\r\n  setLoading(true);\r\n  clientApi.logout()\r\n  .then((res) => {setLoggedIn(false);\r\n                history.push('/');})\r\n  .catch((err) => handleError(err))\r\n  .finally(() => setLoading(false))\r\n}\r\n\r\nconst updateUser = ({ name, email }) => {\r\n  setLoading(true);\r\n  clientApi.editProfile(name,email)\r\n  .then(res => {console.log(res);\r\n  setUpdateMessage(res.message);\r\n  setCurrentUser({name: res.name, email: res.email});})\r\n  .catch((err) => handleError(err))\r\n  .finally(() => setLoading(false))\r\n}\r\n\r\nconst nameEnChecker = (el) => {\r\n  if (el.nameEN === '') {\r\n    return {...el, nameEN: 'none'}\r\n  }\r\n  return el;\r\n}\r\n\r\nconst movieLike = (props, link) => {\r\n  setLoading(true);\r\n  if (link === 'movies') {\r\n  if (!savedMovies.find((el) => el.movieId === props.id)){ \r\n    let requestData = nameEnChecker(props);\r\n  clientApi.createMovie(requestData)\r\n  .then(res => {setSavedMovies([...savedMovies, res]);\r\n    console.log('Фильм добавлен в сохранённые.')})\r\n  .catch(err => handleError(err))\r\n  .finally(() => setLoading(false))\r\n}else{\r\n  let deletedMovie = savedMovies.find((movie) => movie.movieId === props.id);\r\n   if (deletedMovie) {\r\n  clientApi.deleteMovie(deletedMovie._id)\r\n  .then(res => {\r\n    setSavedMovies(res);\r\n    console.log('Фильм удалён из сохранённых.')})\r\n  .catch(err => handleError(err))\r\n  .finally(() => setLoading(false))\r\n}}} if (link === 'saved-movies') {\r\n  savedMovies.splice(savedMovies.indexOf(props, 0), 1);\r\n  clientApi.deleteMovie(props._id)\r\n  .then(res => {\r\n    setSavedMovies(res);\r\n    console.log('Фильм удалён из сохранённых.')})\r\n  .catch(err => handleError(err))\r\n  .finally(() => setLoading(false))\r\n}};\r\n\r\nconst checkToken = useCallback(() => {\r\n  clientApi.getProfileData()\r\n  .then((res) => {\r\n      setCurrentUser({name: res.name, email: res.email, _id: res._id});\r\n      setLoggedIn(true);\r\n      if (location.pathname === '/signin' || location.pathname === '/signup') {\r\n        history.push('/movies');\r\n      } else {\r\n        history.push(location.pathname);\r\n      }\r\n  })\r\n  .catch((err) => handleError(err))\r\n}, [history]);\r\n  \r\nuseEffect(() => {\r\n  checkToken();\r\n}, [checkToken, history])\r\n\r\n\r\nuseEffect(() => {\r\n  getMovies();\r\n}, []);\r\n\r\nuseEffect(() => {\r\n  setUpdateMessage('');\r\n}, [location.pathname]);\r\n\r\nuseEffect(() => {\r\n  Promise.all([clientApi.getProfileData(), clientApi.getContent()])\r\n    .then(res => {\r\n      const [profileData, moviesData] = res;\r\n      setSavedMovies(moviesData)      \r\n      setCurrentUser({name: profileData.name, email: profileData.email, _id: profileData._id});\r\n      setLoggedIn(true);}) \r\n    .catch((err) => handleError(err))\r\n}, [loggedIn])\r\n\r\nreturn (\r\n  <CurrentUserContext.Provider value={currentUser}>\r\n    <div className=\"App\"> \r\n      <Switch>\r\n            <Route exact path=\"/\">\r\n              <Main\r\n               handleButtonOpenClick={handleBurgerMenuClick}\r\n               headerBackgrounColor={headerColors.main}\r\n               navShow=\"grid; [@media (max-width:1279px)]: display: none\"\r\n               loggedIn={loggedIn}\r\n               isLoading={loading}\r\n                />\r\n            </Route>\r\n            <ProtectedRoute\r\n             path=\"/movies\"\r\n             component={Movies}\r\n             page={\"movies\"}\r\n             likeFunc={movieLike}\r\n             userId={currentUser._id}\r\n             cards={movies}\r\n             saved={savedMovies}\r\n             width={width}\r\n             handleButtonOpenClick={handleBurgerMenuClick}\r\n             headerBackgrounColor={headerColors.default}\r\n             navShow=\"grid; [@media (max-width:1279px)]: display: none\"\r\n             loggedIn={loggedIn}\r\n             isLoading={loading}\r\n              / >\r\n            <ProtectedRoute\r\n             path=\"/saved-movies\"\r\n             component={SavedMovies}\r\n             page={\"saved-movies\"}\r\n             likeFunc={movieLike}\r\n             userId={currentUser._id}\r\n             cards={[]}\r\n             saved={savedMovies}\r\n             handleButtonOpenClick={handleBurgerMenuClick}\r\n             headerBackgrounColor={headerColors.default}\r\n             navShow=\"grid; [@media (max-width:1279px)]: display: none\"\r\n             loggedIn={loggedIn}\r\n              / >\r\n            <ProtectedRoute\r\n             path=\"/profile\"\r\n             component={Profile}\r\n             onUpdate={updateUser}\r\n             logout={logoutUser}\r\n             title={currentUser.name}\r\n             handleButtonOpenClick={handleBurgerMenuClick}\r\n             headerBackgrounColor={headerColors.profile}\r\n             navShow=\"grid; [@media (max-width:1279px)]: display: none\"\r\n             loggedIn={loggedIn}\r\n             isLoading={loading}\r\n             updateMessage={updateMessage}\r\n              / >\r\n            <Route path=\"/signin\">\r\n              <Login\r\n               onUpdate={loginUser}\r\n               isLoading={loading}\r\n                />\r\n            </Route>\r\n            <Route path=\"/signup\">\r\n              <Register\r\n               onUpdate={registerUser}\r\n               isLoading={loading}\r\n                />\r\n            </Route>\r\n            <Route>\r\n              {!loggedIn ? <Redirect to=\"/\" /> : ''}\r\n            </Route>\r\n      </Switch>\r\n\r\n      <Popup\r\n       handleButtonCloseClick={handleCloseClick}\r\n       closeOverlay={closeOverlay}\r\n       open={isBurgerMenuOpen}\r\n       loggedIn={loggedIn}\r\n        />\r\n\r\n      <ErrorPopup open={openErrorPopup} updater={handleErrorPopup} statusCode={errorContent.satusCode} text={errorContent.statusMessage} />\r\n    </div>\r\n  </CurrentUserContext.Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","C:\\Users\\timid\\dev\\movies-explorer-frontend\\src\\components\\Main\\Main.js",[],"C:\\Users\\timid\\dev\\movies-explorer-frontend\\src\\components\\Movies\\Movies.js",["139"],"import React, { useEffect, useState } from 'react';\r\nimport './Movies.css';\r\nimport Header from '../Header/Header';\r\nimport SearchForm from '../SearchForm/SearchForm';\r\nimport MoviesCardList from '../MoviesCardList/MoviesCardList';\r\nimport Preloader from '../Preloader/Preloader';\r\nimport Footer from '../Footer/Footer';\r\n\r\nfunction Movies({handleButtonOpenClick, headerBackgrounColor, page, likeFunc, userId, cards, saved, width, navShow, loggedIn, isLoading}) {\r\n    const [isSearchRequest, setIsSearchRequest] = useState({movies: '', movieShort: true});\r\n    const [isActive, setIsActive] = useState(true);\r\n    const [movieCount, setMovieCount] = useState(5);\r\n    const [isMovieSearched, setIsMovieSearched] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState(false);\r\n    const [moviesAdd, setMoviesAdd] = useState(3);\r\n    \r\n    function handleSearchRequest(props) {\r\n        setIsSearchRequest(props);\r\n    };\r\n\r\n    function handleSubmit() {\r\n        setLoading(true);\r\n        setIsMovieSearched(true);\r\n    }; \r\n\r\n    const filterMovies = (movie, query) => {\r\n        if (query.movieShort) {\r\n            if (((movie.nameRU.toString().toLowerCase().includes(query.movies.toString().toLowerCase()) || \r\n                (movie.nameEN !== null && \r\n                    movie.nameEN.toString().toLowerCase().includes(query.movies.toString().toLowerCase())))) && movie.duration <= 40) {\r\n                    return movie;\r\n                }\r\n                return;\r\n        }else{\r\n            if (movie.nameRU.toString().toLowerCase().includes(query.movies.toString().toLowerCase()) || \r\n                (movie.nameEN !== null && \r\n                    movie.nameEN.toString().toLowerCase().includes(query.movies.toString().toLowerCase()))) {\r\n                    return movie;\r\n                }\r\n                return;\r\n        }\r\n        };\r\n\r\n    const filteredMovies = cards.filter(card => filterMovies(card, isSearchRequest));\r\n    const toAddingMovies = filteredMovies.slice(0, movieCount);\r\n\r\n    const toAddMoviesInitial = () => {\r\n        if (cards.length !== 0) {            \r\n            if ((filteredMovies.length > 0 && filteredMovies.length < 5) || (filteredMovies.length === toAddingMovies.length)) {\r\n                setIsActive(false);\r\n                setMovieCount(filteredMovies.length);\r\n                setLoading(false);\r\n            } if (!((filteredMovies.length - toAddingMovies.length) < 3) ) {\r\n                setIsActive(true);\r\n                setMovieCount(toAddingMovies.length);\r\n                setLoading(false);\r\n            }\r\n        }    \r\n    };  \r\n    \r\n    const appWidth = () => {\r\n        if (width > 320) {\r\n            setMoviesAdd(3);\r\n        }\r\n        if (width <= 320) {\r\n            setMoviesAdd(2);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (filteredMovies.length !== 0 || filteredMovies.length === 0) {\r\n            setLoading(false);\r\n        }\r\n    }, [filteredMovies])\r\n\r\n    useEffect(() => {\r\n        toAddMoviesInitial();\r\n    });\r\n\r\n    useEffect(() => {\r\n        setMovieCount(5);\r\n    }, [isSearchRequest]);\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => appWidth(), 1000);\r\n    });\r\n\r\n    return(        \r\n        <div className=\"Movies\">\r\n            <Header handleButtonOpenClick={handleButtonOpenClick} headerBackgrounColor={headerBackgrounColor} navShow={navShow} loggedIn={loggedIn} />\r\n                <div className=\"Movies-content\">                    \r\n                    <SearchForm onChange={handleSearchRequest} onSubmit={handleSubmit} />\r\n                    {loading || isLoading ? (<Preloader />) : ''}\r\n                    {  (!isMovieSearched) ? (\r\n                        <div className=\"Movies__before-search\">                            \r\n                        </div>\r\n                    ) : ( (filteredMovies.length !== 0) ? (\r\n                    <div className=\"Movies__add\">\r\n                        <MoviesCardList page={page} likeFunc={likeFunc} userId={userId} cards={toAddingMovies} saved={saved} /> \r\n                        <button type=\"button\" className={`Movies__more ${!isActive ? 'Movies__more_none' : ''}`} onClick={() => {setMovieCount(prevCount => prevCount + moviesAdd)}}>Ещё</button>\r\n                    </div>) : \r\n                    ((!errorMessage) ? (<h2 className=\"Movies__nothing-yet\">Ничего не найдено</h2>) : (<h2 className=\"Movies__error\">Во время запроса произошла ошибка. Возможно, проблема с соединением или сервер недоступен. Подождите немного и попробуйте ещё раз</h2>)))}         \r\n                </div>\r\n            <Footer />            \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Movies;","C:\\Users\\timid\\dev\\movies-explorer-frontend\\src\\components\\Popup\\Popup.js",[],"C:\\Users\\timid\\dev\\movies-explorer-frontend\\src\\components\\ErrorPopup\\ErrorPopup.js",[],"C:\\Users\\timid\\dev\\movies-explorer-frontend\\src\\components\\ProtectedRoute\\ProtectedRoute.js",["140"],"C:\\Users\\timid\\dev\\movies-explorer-frontend\\src\\contexts\\CurrentUserContext.js",[],"C:\\Users\\timid\\dev\\movies-explorer-frontend\\src\\components\\Profile\\Profile.js",["141"],"import React, {useState, useContext, useEffect} from 'react';\r\nimport './Profile.css';\r\nimport Header from '../Header/Header';\r\nimport Preloader from '../Preloader/Preloader';\r\nimport { CurrentUserContext } from '../../contexts/CurrentUserContext';\r\nimport { useFormAndValidate } from '../../utils/FormWithValidation';\r\n\r\nfunction Profile({handleButtonOpenClick, headerBackgrounColor, onUpdate, logout, title, navShow, loggedIn, isLoading, updateMessage}) {\r\n    \r\n    const currentUser = useContext(CurrentUserContext);\r\n    const {values, handleChange, errors, isValid} = useFormAndValidate();\r\n    const [name, setName] = useState(currentUser.name);\r\n    const [email, setEmail] = useState(currentUser.email);\r\n    const [formTitle, setFormTitle] = useState(currentUser.name);\r\n    const [checkData, isDataCheck] = useState(true);\r\n\r\n    function handleSubmit(evt) {\r\n        evt.preventDefault();\r\n        onUpdate({\r\n              name: name,\r\n              email: email,\r\n        })\r\n    }\r\n\r\n    function handleChangeName(e) {\r\n        setName(e.target.value);\r\n      }\r\n    \r\n      function handleChangeEmail(e) {\r\n        setEmail(e.target.value);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if ((name === currentUser.name) && (email === currentUser.email)) {\r\n            isDataCheck(false);\r\n        }else{\r\n            isDataCheck(true);\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        setName(currentUser.name);\r\n        setEmail(currentUser.email);        \r\n    }, [currentUser]);\r\n\r\n    useEffect(() => {\r\n        values.name = name;\r\n        values.email = email;        \r\n    });\r\n\r\n    useEffect(() => {\r\n        setFormTitle(title);\r\n    }, [title]);    \r\n\r\n    return (\r\n        <div className=\"profile\">            \r\n            <Header handleButtonOpenClick={handleButtonOpenClick} headerBackgrounColor={headerBackgrounColor} navShow={navShow} loggedIn={loggedIn} />\r\n            <div className=\"profile-content\">\r\n                <h2 className=\"profile-title\">Привет, {formTitle}!</h2>\r\n                {updateMessage !== '' ? (<p className=\"profile__edit-updated\">{updateMessage}</p>) : <p className=\"profile__edit-updated\"></p>}\r\n                { isLoading ? <Preloader /> : ''}\r\n                <form className=\"profile__form\" onSubmit={handleSubmit}>\r\n                    <fieldset className=\"profile__name\">\r\n                        <label className=\"register-input__label\">Имя</label>\r\n                        <input\r\n                        id=\"name\"\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        className={`register-input__input ${errors.name ? 'register-input__error' : ''}`}\r\n                        minLength=\"2\"\r\n                        maxLength=\"30\"\r\n                        placeholder=\"Имя\"\r\n                        value={name}\r\n                        onChange={(e) => {handleChange(e);\r\n                                          handleChangeName(e)}}\r\n                        required\r\n                        autoFocus={true}\r\n                        formNoValidate\r\n                        />\r\n                        <span className={`register-input_error-hidden ${errors.name ? 'register-input_error-active' : ''}`}>{errors.name}</span>                    \r\n                    </fieldset>\r\n                    <fieldset className=\"profile__email\">\r\n                    <label className=\"register-input__label\">E-mail</label>\r\n                        <input\r\n                        id=\"email\"\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        className={`register-input__input ${errors.email ? 'register-input__error' : ''}`}                    \r\n                        placeholder=\"Электронная почта\"\r\n                        value={email}\r\n                        onChange={(e) => {handleChange(e);\r\n                                          handleChangeEmail(e)}}\r\n                        required\r\n                        autoFocus={true}\r\n                        formNoValidate\r\n                        />\r\n                        <span className={`register-input_error-hidden ${errors.email ? 'register-input_error-active' : ''}`}>{errors.email}</span>\r\n                    </fieldset>\r\n                    <fieldset className=\"profile__edit\">                        \r\n                        <label className=\"profile__edit-label\">\r\n                        <button\r\n                        type=\"submit\"\r\n                        className={`profile__edit-submit ${(isValid && checkData) ? 'profile__edit-submit_active' : ''}`}\r\n                        disabled={(isValid && checkData) ? false : true}\r\n                        >Редактировать</button>\r\n                        </label>\r\n                    </fieldset>\r\n                </form>\r\n                <button type=\"submit\" className=\"profile__logout\" onClick={logout}>Выйти из аккаунта</button>\r\n            </div>        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","C:\\Users\\timid\\dev\\movies-explorer-frontend\\src\\utils\\MoviesApi.js",[],"C:\\Users\\timid\\dev\\movies-explorer-frontend\\src\\utils\\Resize.js",[],"C:\\Users\\timid\\dev\\movies-explorer-frontend\\src\\utils\\constants.js",[],"C:\\Users\\timid\\dev\\movies-explorer-frontend\\src\\components\\Login\\Login.js",[],"C:\\Users\\timid\\dev\\movies-explorer-frontend\\src\\components\\Register\\Register.js",[],"C:\\Users\\timid\\dev\\movies-explorer-frontend\\src\\components\\SavedMovies\\SavedMovies.js",["142"],"import React, {useEffect, useState} from 'react';\r\nimport './SavedMovies.css';\r\nimport Header from '../Header/Header';\r\nimport SearchForm from '../SearchForm/SearchForm';\r\nimport MoviesCardList from '../MoviesCardList/MoviesCardList';\r\nimport Footer from '../Footer/Footer';\r\nimport Preloader from '../Preloader/Preloader';\r\n\r\nfunction SavedMovies({handleButtonOpenClick, headerBackgrounColor, page, likeFunc, userId, cards, saved, navShow, loggedIn, isLoading}) {\r\n\r\n    const [isSearchRequest, setIsSearchRequest] = useState({movies: '', movieShort: true});\r\n    const [isMovieSearched, setIsMovieSearched] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState(false);\r\n    \r\n    function handleSearchRequest(props) {\r\n        setIsSearchRequest(props);\r\n    };\r\n\r\n    function handleSubmit() {\r\n        setLoading(true);\r\n        setIsMovieSearched(true);\r\n    }; \r\n\r\n    const filterMovies = (movie, query) => {\r\n        if (query.movieShort) {\r\n            if (((movie.nameRU.toString().toLowerCase().includes(query.movies.toString().toLowerCase()) || \r\n                (movie.nameEN !== null && \r\n                    movie.nameEN.toString().toLowerCase().includes(query.movies.toString().toLowerCase())))) && movie.duration <= 40) {\r\n                    return movie;\r\n                }\r\n                return;\r\n        }else{\r\n            if (movie.nameRU.toString().toLowerCase().includes(query.movies.toString().toLowerCase()) || \r\n                (movie.nameEN !== null && \r\n                    movie.nameEN.toString().toLowerCase().includes(query.movies.toString().toLowerCase()))) {\r\n                    return movie;\r\n                }\r\n                return;\r\n        }\r\n    };\r\n\r\n    const filteredMovies = saved.filter(card => filterMovies(card, isSearchRequest));\r\n\r\n    useEffect(() => {\r\n        if (filteredMovies.length !== 0 || filteredMovies.length === 0) {\r\n            setLoading(false);\r\n        }\r\n    }, [filteredMovies])\r\n\r\n    return (\r\n        <div className=\"Saved-movies\">\r\n            <Header handleButtonOpenClick={handleButtonOpenClick} headerBackgrounColor={headerBackgrounColor} navShow={navShow} loggedIn={loggedIn} />\r\n                <div className=\"Saved-movies__content\">                \r\n                <SearchForm onChange={handleSearchRequest} onSubmit={handleSubmit} />\r\n                {loading ? (<Preloader />) : ''}\r\n                    {  (!isMovieSearched) ? (\r\n                        <div className=\"Saved-movies__before-search\">                            \r\n                        </div>\r\n                    ) : ( (filteredMovies.length !== 0) ? (\r\n                    <div className=\"Saved-movies__add\">\r\n                        <MoviesCardList page={page} likeFunc={likeFunc} userId={userId} cards={filteredMovies} saved={saved} />                         \r\n                    </div>) : \r\n                    ((!errorMessage) ? (<h2 className=\"Saved-movies__nothing-yet\">Ничего не найдено</h2>) : (<h2 className=\"Saved-movies__error\">Во время запроса произошла ошибка. Возможно, проблема с соединением или сервер недоступен. Подождите немного и попробуйте ещё раз</h2>)))} \r\n                </div>\r\n            <Footer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SavedMovies;","C:\\Users\\timid\\dev\\movies-explorer-frontend\\src\\utils\\MainApi.js",[],"C:\\Users\\timid\\dev\\movies-explorer-frontend\\src\\utils\\FormWithValidation.js",[],"C:\\Users\\timid\\dev\\movies-explorer-frontend\\src\\components\\Header\\Header.js",[],"C:\\Users\\timid\\dev\\movies-explorer-frontend\\src\\components\\NavTab\\NavTab.js",[],"C:\\Users\\timid\\dev\\movies-explorer-frontend\\src\\components\\Promo\\Promo.js",[],"C:\\Users\\timid\\dev\\movies-explorer-frontend\\src\\components\\Techs\\Techs.js",[],"C:\\Users\\timid\\dev\\movies-explorer-frontend\\src\\components\\AboutProject\\AboutProject.js",[],"C:\\Users\\timid\\dev\\movies-explorer-frontend\\src\\components\\AboutMe\\AboutMe.js",[],"C:\\Users\\timid\\dev\\movies-explorer-frontend\\src\\components\\Navigation\\Navigation.js",[],"C:\\Users\\timid\\dev\\movies-explorer-frontend\\src\\components\\Portfolio\\Portfolio.js",[],"C:\\Users\\timid\\dev\\movies-explorer-frontend\\src\\components\\Preloader\\Preloader.js",[],"C:\\Users\\timid\\dev\\movies-explorer-frontend\\src\\components\\SearchForm\\SearchForm.js",[],"C:\\Users\\timid\\dev\\movies-explorer-frontend\\src\\components\\Footer\\Footer.js",[],"C:\\Users\\timid\\dev\\movies-explorer-frontend\\src\\components\\AuthForm\\AuthForm.js",[],"C:\\Users\\timid\\dev\\movies-explorer-frontend\\src\\components\\MoviesCardList\\MoviesCardList.js",[],"C:\\Users\\timid\\dev\\movies-explorer-frontend\\src\\components\\MoviesCard\\MoviesCard.js",[],{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","severity":1,"message":"148","line":169,"column":4,"nodeType":"149","endLine":169,"endColumn":13,"suggestions":"150"},{"ruleId":"147","severity":1,"message":"151","line":178,"column":4,"nodeType":"149","endLine":178,"endColumn":6,"suggestions":"152"},{"ruleId":"153","severity":1,"message":"154","line":15,"column":26,"nodeType":"155","messageId":"156","endLine":15,"endColumn":41},{"ruleId":"153","severity":1,"message":"157","line":6,"column":9,"nodeType":"155","messageId":"156","endLine":6,"endColumn":13},{"ruleId":"147","severity":1,"message":"158","line":33,"column":5,"nodeType":"155","endLine":33,"endColumn":14,"suggestions":"159"},{"ruleId":"153","severity":1,"message":"154","line":14,"column":26,"nodeType":"155","messageId":"156","endLine":14,"endColumn":41},"no-native-reassign",["160"],"no-negated-in-lhs",["161"],"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'location.pathname'. Either include it or remove the dependency array.","ArrayExpression",["162"],"React Hook useEffect has a missing dependency: 'getMovies'. Either include it or remove the dependency array.",["163"],"no-unused-vars","'setErrorMessage' is assigned a value but never used.","Identifier","unusedVar","'path' is assigned a value but never used.","React Hook useEffect contains a call to 'isDataCheck'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [name, currentUser.name, currentUser.email, email] as a second argument to the useEffect Hook.",["164"],"no-global-assign","no-unsafe-negation",{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},{"desc":"169","fix":"170"},"Update the dependencies array to be: [history, location.pathname]",{"range":"171","text":"172"},"Update the dependencies array to be: [getMovies]",{"range":"173","text":"174"},"Add dependencies array: [name, currentUser.name, currentUser.email, email]",{"range":"175","text":"176"},[5411,5420],"[history, location.pathname]",[5533,5535],"[getMovies]",[1364,1364],", [name, currentUser.name, currentUser.email, email]"]